<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.walterddr</groupId>
    <artifactId>flink-pinot-sink</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>12</java.version>
        <scala.version>2.11</scala.version>
        <flink.version>1.12.0</flink.version>
        <pinot.version>0.8.0</pinot.version>
        <async.client.version>2.12.1</async.client.version>
        <logback.version>1.2.3</logback.version>
        <guava.version>23.0</guava.version>
        <typesafe.config.version>1.3.3</typesafe.config.version>
        <slf4j.version>1.7.30</slf4j.version>
        <ch.driver.version>0.1.40</ch.driver.version>
        <mvn.compiler.version>3.8.0</mvn.compiler.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>${typesafe.config.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.asynchttpclient</groupId>
            <artifactId>async-http-client</artifactId>
            <version>${async.client.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java_${scala.version}</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.pinot</groupId>
            <artifactId>pinot-segment-writer-file-based</artifactId>
            <version>${pinot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.pinot</groupId>
            <artifactId>pinot-segment-uploader-default</artifactId>
            <version>${pinot.version}</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-clients_${scala.version}</artifactId>
            <version>${flink.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.pinot</groupId>
            <artifactId>pinot-integration-tests</artifactId>
            <version>${pinot.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mvn.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M2</version>
                <executions>
                    <!--execution>
                        <id>enforce-dependency-convergence</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution-->
                </executions>
                <configuration>
                    <rules>
                        <dependencyConvergence/>
                    </rules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <configLocation>${project.basedir}/config/checkstyle.xml</configLocation>
                    <suppressionsLocation>${project.basedir}/config/suppressions.xml</suppressionsLocation>
                    <propertyExpansion>config_loc=${project.basedir}/config</propertyExpansion>
                    <logViolationsToConsole>true</logViolationsToConsole>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.45.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>checkstyle</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--
                  Configuration for unit/integration tests section 2 of 3 (plugins) STARTS HERE.
                  This is the core piece for being able to manage unit tests and
                  integration (='system') tests within Maven by using surefire.
                  See also: properties section and profiles section.
                -->
                <configuration>
                    <testFailureIgnore>false</testFailureIgnore>
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/*ITCase.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>none</exclude>
                            </excludes>
                            <includes>
                                <include>**/*ITCase.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <!-- Default configuration for all reports -->
                </configuration>
                <executions>
                    <execution>
                        <id>aggregate</id>
                        <goals>
                            <goal>aggregate</goal>
                        </goals>
                        <phase>site</phase>
                        <configuration>
                            <!-- Specific configuration for the aggregate report -->
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>      <plugin>
            <groupId>org.apache.rat</groupId>
            <artifactId>apache-rat-plugin</artifactId>
            <version>0.13</version>
            <executions>
                <execution>
                    <phase>verify</phase>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <excludes>
                    <!-- Exclude license copies -->
                    <exclude>licenses/**</exclude>
                    <exclude>licenses-binary/**</exclude>

                    <!-- Exclude build targets -->
                    <exclude>**/target/**</exclude>

                    <!-- Text and log files -->
                    <exclude>**/*.txt</exclude>
                    <exclude>**/*.log</exclude>
                    <exclude>**/*.list</exclude>
                    <exclude>**/*.out</exclude>
                    <exclude>**/*.generated</exclude>
                    <exclude>**/*.json</exclude>
                    <exclude>**/*.schema</exclude>

                    <!-- JDBC Drivers -->
                    <exclude>**/java.sql.*</exclude>

                    <!-- Spark datasource register -->
                    <exclude>**/org.apache.spark.sql.sources.DataSourceRegister</exclude>

                    <!-- Binary files -->
                    <exclude>**/*.avro</exclude>
                    <exclude>**/*.avsc</exclude>
                    <exclude>**/*.csv</exclude>
                    <exclude>**/*.desc</exclude>
                    <exclude>**/*.parquet</exclude>
                    <exclude>**/*.gz</exclude>
                    <exclude>**/*.orc</exclude>
                    <exclude>**/*.dict</exclude>
                    <exclude>**/*.raw</exclude>
                    <exclude>**/*.mapping</exclude>
                    <exclude>**/*.ser</exclude>
                    <exclude>**/*.v1</exclude>
                    <exclude>**/*.v2</exclude>
                    <exclude>**/appAssemblerScriptTemplate</exclude>

                    <!-- js, css files that are exact copies of the third-party works. In this case, the original header has to
                    be kept. Please refer to 'Treatment of Third-party works' in https://www.apache.org/legal/src-headers.html
                    -->
                    <exclude>**/node_modules/**</exclude>
                    <exclude>**/dist/**</exclude>
                    <exclude>**/*.*rc</exclude>
                    <exclude>**/src/main/resources/*.*rc</exclude>

                    <!-- IDE files -->
                    <exclude>**/*.iml</exclude>
                    <exclude>**/maven-eclipse.xml</exclude>
                    <exclude>**/.settings/**</exclude>
                    <exclude>.externalToolBuilders/**</exclude>

                    <!-- Docker and Kubernetes (not part of the distribution) -->
                    <exclude>kubernetes/**</exclude>
                    <exclude>docker/**</exclude>

                    <!-- Github template files -->
                    <exclude>.github/*.md</exclude>
                </excludes>
            </configuration>
        </plugin>
        </plugins>
    </build>

</project>
